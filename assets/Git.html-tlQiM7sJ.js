import{_ as e,c as l,d as i,o as a}from"./app-ZTDKGR0h.js";const n="/Yanran_blog/assets/Git%E5%9F%BA%E7%A1%80-BR-WJFIg.png",r="/Yanran_blog/assets/Git%E5%9F%BA%E7%A1%80-1-DRCfNTPH.png",g="/Yanran_blog/assets/Git%E5%9F%BA%E7%A1%80-2-DVFQKynr.png",d={};function s(o,t){return a(),l("div",null,t[0]||(t[0]=[i('<h1 id="git" tabindex="-1"><a class="header-anchor" href="#git"><span>Git</span></a></h1><h2 id="_1-图示" tabindex="-1"><a class="header-anchor" href="#_1-图示"><span>1. 图示</span></a></h2><p><img src="'+n+'" alt="600"></p><p><img src="'+r+'" alt="600"></p><h2 id="_2-指令" tabindex="-1"><a class="header-anchor" href="#_2-指令"><span>2. 指令</span></a></h2><table><thead><tr><th style="text-align:center;">作用</th><th style="text-align:left;">指令</th></tr></thead><tbody><tr><td style="text-align:center;">创建用户</td><td style="text-align:left;">git config [--global] user.name &quot;username&quot;</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">git config [--global] user.email &quot;email&quot;</td></tr><tr><td style="text-align:center;">生成密钥</td><td style="text-align:left;">ssh-keygen -t rsa -C &quot;这里换上你的邮箱&quot;</td></tr><tr><td style="text-align:center;">验证连接</td><td style="text-align:left;">ssh -T git@github.com</td></tr><tr><td style="text-align:center;">本地仓库处理</td><td style="text-align:left;">git init；git add .；git commit；git commit -m &#39;&#39;；git reset --hard &lt;commit ID&gt;；</td></tr><tr><td style="text-align:center;">日志状态</td><td style="text-align:left;">git status；git log；git reflog；</td></tr><tr><td style="text-align:center;">分支处理</td><td style="text-align:left;">git branch；git branch ...；git checkout ...；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">git branch -v；git branch -vv；git branch -a；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">git merge ...；git branch -d ...；git branch -D ...；</td></tr><tr><td style="text-align:center;">链接远程仓库</td><td style="text-align:left;">git remote add &lt;远端名称&gt; &lt;仓库路径&gt;</td></tr><tr><td style="text-align:center;">绑定本地仓库与远程仓库对应关系</td><td style="text-align:left;">git branch --set-upstream-to=[远端名称]/[远端分支名称] [本地分支名称]；</td></tr><tr><td style="text-align:center;">查看远程仓库</td><td style="text-align:left;">git remote</td></tr><tr><td style="text-align:center;">远程仓库处理</td><td style="text-align:left;">git clone ...；git clone [远端仓库地址] [克隆后本地仓库名称]；git clone [远端仓库地址] [克隆后本地仓库名称] -b [远端分支名]；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">git fetch；git fetch [远端名称] [远端分支名称]；git fetch [远端名称] --all；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">git pull；git pull [远端名称] [远端分支名称]；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">git push [-f] [远端名称] [本地分支名称]；</td></tr></tbody></table><blockquote><p>[!note] <code>git fetch</code>实际上将<strong>本地仓库中</strong>的远程分支<strong>更新</strong>成了远程仓库相应分支最新的状态</p></blockquote><blockquote><p>[!note] <code>git fetch</code>并不会改变你本地仓库的状态，也不会修改你磁盘上的文件，<code>git fetch</code>为单纯的下载操作。</p></blockquote><blockquote><p>[!note] <code>git pull</code>相当于<code>git fetch</code>+<code>git merge</code>。</p></blockquote><ul><li>alias git-log=&#39;git log --all --graph --abbrev-commit --pretty=oneline&#39;</li></ul><h2 id="_3-冲突" tabindex="-1"><a class="header-anchor" href="#_3-冲突"><span>3. 冲突</span></a></h2><p><img src="'+g+'" alt="600"></p><ul><li>远程分支也是分支，合并冲突的解决方法与本地分支合并冲突的解决方法一致。</li></ul>',13)]))}const h=e(d,[["render",s]]),x=JSON.parse('{"path":"/guide/knowledge/Git.html","title":"Git","lang":"zh-CN","frontmatter":{},"git":{},"filePathRelative":"guide/knowledge/Git.md"}');export{h as comp,x as data};
