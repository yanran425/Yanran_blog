import{_ as a,c as i,d as e,b as l,e as s,a as d,w as r,r as c,o as p}from"./app-ZTDKGR0h.js";const o="/Yanran_blog/assets/Linux%E5%9F%BA%E7%A1%80-8-BQTompDW.png",g="/Yanran_blog/assets/Linux%E5%9F%BA%E7%A1%80-1-U1PNvigy.png",y="/Yanran_blog/assets/Linux%E5%9F%BA%E7%A1%80-gAJcd0Hd.png",x="/Yanran_blog/assets/Linux%E5%9F%BA%E7%A1%80-2-CqCHAyMJ.png",u="/Yanran_blog/assets/Linux%E5%9F%BA%E7%A1%80-3-DdF1_xxm.png",h="/Yanran_blog/assets/Linux%E5%9F%BA%E7%A1%80-4-BNaq6m3S.png",b="/Yanran_blog/assets/Linux%E5%9F%BA%E7%A1%80-5-BGHeOQqM.png",m="/Yanran_blog/assets/Linux%E5%9F%BA%E7%A1%80-6-CwCfItgx.png",f="/Yanran_blog/assets/Linux%E5%9F%BA%E7%A1%80-7-CuOO--NS.png",v={};function k(_,t){const n=c("RouteLink");return p(),i("div",null,[t[2]||(t[2]=e('<h1 id="linux基础" tabindex="-1"><a class="header-anchor" href="#linux基础"><span>Linux基础</span></a></h1><h2 id="_1-linux系统特点" tabindex="-1"><a class="header-anchor" href="#_1-linux系统特点"><span>1. Linux系统特点</span></a></h2><p>开放性（开源）、多用户、多任务良好的用户界面、优异的性能与稳定性</p><p>Windows是单用户多任务</p><p>单用户：在登录计算机操作系统时只能允许同时登录==一个==用户</p><p>多用户：在登录计算机操作系统时只能允许同时登录==多个==用户</p><p>单任务：允许用户同时进行==一个==操作任务数量</p><p>多任务：允许用户同时进行==多个==操作任务数量</p><h2 id="_2-linux发展" tabindex="-1"><a class="header-anchor" href="#_2-linux发展"><span>2. Linux发展</span></a></h2><p><img src="'+o+'" alt="600"></p><h2 id="_3-思想模式" tabindex="-1"><a class="header-anchor" href="#_3-思想模式"><span>3. 思想模式</span></a></h2><ul><li>Linux 一切皆是文件。</li><li></li></ul><p><img src="'+g+'" alt="600"> ^305325</p><h2 id="_4-指令" tabindex="-1"><a class="header-anchor" href="#_4-指令"><span>4. 指令</span></a></h2><table><thead><tr><th style="text-align:center;">作用</th><th style="text-align:left;">指令</th></tr></thead><tbody><tr><td style="text-align:center;">查看文件列表</td><td style="text-align:left;">ls；ls -l；ls -lh；</td></tr><tr><td style="text-align:center;">查看目录内存</td><td style="text-align:left;">du；ls -s；ls -sh；</td></tr><tr><td style="text-align:center;">路径</td><td style="text-align:left;">cd；pwd；</td></tr><tr><td style="text-align:center;">生成</td><td style="text-align:left;">mkdir 文件夹名；makdir -p 文件夹名；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">touch 文件名；makefile 文件名;</td></tr><tr><td style="text-align:center;">文件操作</td><td style="text-align:left;">cp -r；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">mv；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">rm；rm -r；rm -rf；</td></tr><tr><td style="text-align:center;">创建软链接</td><td style="text-align:left;">ln -s 原始文件路径地址 快捷方式的路径</td></tr><tr><td style="text-align:center;">文件搜索</td><td style="text-align:left;">find &lt;路径范围&gt; [选项] &lt;选项的值&gt; ；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">find ./ -name &#39;*.txt&#39;；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">find ./ -type f；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">find ./ -type d |wc -l；</td></tr><tr><td style="text-align:center;">输出操作</td><td style="text-align:left;">&gt;；&gt;&gt;；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">cat；cat ... ... &gt;...；</td></tr><tr><td style="text-align:center;">磁盘查看</td><td style="text-align:left;">df；df -h；</td></tr><tr><td style="text-align:center;">查看块状设备的信息</td><td style="text-align:left;">lsblk（Name:名称，Size:设备大小，Type:类型，MountPoint:挂载点）</td></tr><tr><td style="text-align:center;">内存查看</td><td style="text-align:left;">free；free -m；</td></tr><tr><td style="text-align:center;">文件查看</td><td style="text-align:left;">head ...；head -n ...；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">tail ...；tail -n ...；tail -f ...；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">less ...；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">wc -lwc ...；</td></tr><tr><td style="text-align:center;">日期时间</td><td style="text-align:left;">date；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">date +%F；date &quot;+%Y-%m-%d&quot;；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">date +%T；date &quot;+%H:%M:%S&quot;；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">date &quot;+%F %T&quot;；date &quot;+%Y-%m-%d %H:%M:%S&quot;；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">date -d &quot;-1 day&quot; &quot;+%Y-%m-%d %H-%M-%S&quot;；</td></tr><tr><td style="text-align:center;">日历</td><td style="text-align:left;">cal；cal -1；cal -3；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">cal -y 2030；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">cal -s；cal -m；cal -my 2030；</td></tr><tr><td style="text-align:center;">使用时间</td><td style="text-align:left;">uptime；</td></tr><tr><td style="text-align:center;">清屏</td><td style="text-align:left;">clear；Ctrl+L；</td></tr><tr><td style="text-align:center;">管道</td><td style="text-align:left;">过滤(需配合其他指令使用)：ls |grep y；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">统计文件数(需配合其他指令使用)：ls |wc -l；</td></tr><tr><td style="text-align:center;">主机名</td><td style="text-align:left;">hostname；hostname -f(显示全限定域名即FQDN)；</td></tr><tr><td style="text-align:center;">用户信息</td><td style="text-align:left;">id；id 用户名；whoami；</td></tr><tr><td style="text-align:center;">进程信息</td><td style="text-align:left;">ps；ps -ef；ps -ef | grep panel；pstree -p；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">top（VIRT虚拟内存 RES 常驻内存 SHR 共享内存）；</td></tr><tr><td style="text-align:center;">进程管理</td><td style="text-align:left;">kill ...；killall ...；</td></tr><tr><td style="text-align:center;">服务管理</td><td style="text-align:left;">service &lt;服务名&gt; start/stop/restart；systemctl stop httpd；</td></tr><tr><td style="text-align:center;">系统信息</td><td style="text-align:left;">uname；uname -a；</td></tr><tr><td style="text-align:center;">网卡信息</td><td style="text-align:left;">ifconfig；</td></tr><tr><td style="text-align:center;">网络状态</td><td style="text-align:left;">netstat -tnlp</td></tr><tr><td style="text-align:center;">设置权限</td><td style="text-align:left;">chmod [选项] 权限模式 文档/文件夹，其中选项-R：递归设置权限 （当文档类型为文件夹的时候）</td></tr><tr><td style="text-align:center;">重启</td><td style="text-align:left;">reboot；reboot -w；</td></tr><tr><td style="text-align:center;">关机</td><td style="text-align:left;">shutdown；shutdown -h now &#39;关机提示&#39;；init 0；halt；poweroff；</td></tr><tr><td style="text-align:center;">手册</td><td style="text-align:left;">man ...；</td></tr></tbody></table><h2 id="_5-vim" tabindex="-1"><a class="header-anchor" href="#_5-vim"><span>5. vim</span></a></h2><ul><li>vim的三种模式：命令模式、编辑模式、末行模式</li></ul><p><img src="'+y+'" alt="600"></p><ul><li>命令模式</li></ul><table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:left;">按键</th></tr></thead><tbody><tr><td style="text-align:center;">行首</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:center;">行尾</td><td style="text-align:left;">$</td></tr><tr><td style="text-align:center;">首行</td><td style="text-align:left;">gg</td></tr><tr><td style="text-align:center;">尾行</td><td style="text-align:left;">G</td></tr><tr><td style="text-align:center;">上一页</td><td style="text-align:left;">ctrl+b</td></tr><tr><td style="text-align:center;">下一页</td><td style="text-align:left;">ctrl+f</td></tr><tr><td style="text-align:center;">复制</td><td style="text-align:left;">yy；[行数] yy；</td></tr><tr><td style="text-align:center;">剪切</td><td style="text-align:left;">dd；[行数] dd；D；</td></tr><tr><td style="text-align:center;">粘贴</td><td style="text-align:left;">p</td></tr><tr><td style="text-align:center;">撤销</td><td style="text-align:left;">:u；u</td></tr><tr><td style="text-align:center;">重做</td><td style="text-align:left;">ctrl+r</td></tr><tr><td style="text-align:center;">跳转到第n行</td><td style="text-align:left;">n+G；:n；</td></tr><tr><td style="text-align:center;">上/下/左/右移n行</td><td style="text-align:left;">n+↑/↓/←/→</td></tr></tbody></table><ul><li>末行模式</li></ul><table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:left;">按键</th></tr></thead><tbody><tr><td style="text-align:center;">保存</td><td style="text-align:left;">:w</td></tr><tr><td style="text-align:center;">另存为</td><td style="text-align:left;">:w 路径</td></tr><tr><td style="text-align:center;">退出</td><td style="text-align:left;">:q</td></tr><tr><td style="text-align:center;">保存并退出</td><td style="text-align:left;">:wq</td></tr><tr><td style="text-align:center;">自适应退出</td><td style="text-align:left;">:x</td></tr><tr><td style="text-align:center;">强制退出</td><td style="text-align:left;">:q!</td></tr><tr><td style="text-align:center;">外部命令</td><td style="text-align:left;">:!外部命令</td></tr><tr><td style="text-align:center;">搜索</td><td style="text-align:left;">/关键词；N；n</td></tr><tr><td style="text-align:center;">取消高亮</td><td style="text-align:left;">:nohl</td></tr><tr><td style="text-align:center;">替换</td><td style="text-align:left;">😒/关键词/目标词；😒/关键词/目标词/g；</td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">:%s/关键词/目标词；:%s/关键词/目标词/g（%表示整个文件，g表示全局）</td></tr><tr><td style="text-align:center;">显示行号</td><td style="text-align:left;">:set nu</td></tr><tr><td style="text-align:center;">查看当前打开的文件</td><td style="text-align:left;">:files</td></tr><tr><td style="text-align:center;">切换文件</td><td style="text-align:left;">:open 文件名</td></tr><tr><td style="text-align:center;">切换上/下一个文件</td><td style="text-align:left;">:bp/n</td></tr><tr><td style="text-align:center;">开启/关闭颜色</td><td style="text-align:left;">:syntax on/off</td></tr></tbody></table><ul><li>编辑模式</li></ul><p><img src="'+x+'" alt="600"></p><table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:left;">按键</th></tr></thead><tbody><tr><td style="text-align:center;">计算器</td><td style="text-align:left;">ctrl+r</td></tr></tbody></table><ul><li>配置</li></ul><ol><li>个人配置文件（~/.vimrc）</li><li>全局配置文件（/etc/vimrc）</li></ol><ul><li>异常退出</li></ul><p>需要删除.swp文件</p><ul><li>别名机制</li></ul><p>~/.bashrc文件</p><h2 id="_6-自有服务" tabindex="-1"><a class="header-anchor" href="#_6-自有服务"><span>6. 自有服务</span></a></h2><h3 id="_6-1-运行模式" tabindex="-1"><a class="header-anchor" href="#_6-1-运行模式"><span>6.1 运行模式</span></a></h3><p>运行模式也叫做运行级别 linux中必定存在的一个进程init，其存在一个对应的配置文件/etc/inittab，整个文件叫做==系统运行级别配置文件==</p><p>systemctl set-default multi-user.target</p><ul><li>0 — 表示关机级别（不要将默认的运行级别设置成这个值）</li><li>1 — 单用户模式</li><li>2 — 多用户模式，不带NFS（Network File Syetem）</li><li>3 — 多用户模式，完全的多用户模式（不带桌面的，纯命令行模式）</li><li>4 — 没有被使用的模式（被保留模式）</li><li>5 — X11，完整的图形化界面模式</li><li>6 — 表示重启级别（不要将默认的运行级别设置成这个值）</li></ul><h3 id="_6-2-用户与用户组管理" tabindex="-1"><a class="header-anchor" href="#_6-2-用户与用户组管理"><span>6.2 用户与用户组管理</span></a></h3><ul><li>Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</li><li>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，<strong>这个用户组在创建用户时同时创建</strong>。</li></ul><table><thead><tr><th style="text-align:center;">文件</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">/etc/passwd</td><td style="text-align:left;">存储用户的关键信息</td></tr><tr><td style="text-align:center;">/etc/group</td><td style="text-align:left;">存储用户组的关键信息</td></tr><tr><td style="text-align:center;">/etc/shadow</td><td style="text-align:left;">存储用户的密码信息</td></tr></tbody></table><table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:center;">语法</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">添加用户</td><td style="text-align:center;">useradd [选项] 用户名</td><td style="text-align:left;">添加新用户</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-g</td><td style="text-align:left;">表示指定用户的用户主组，可以是用户组的id，也可以是组名（主组在passwd里查看）</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-G</td><td style="text-align:left;">表示指定用户的用户附加组，可以是用户组的id，也可以是组名（附加组在group里查看）</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-u</td><td style="text-align:left;">用户的id（用户的标识符），系统默认会从500之后按顺序分配uid</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-c</td><td style="text-align:left;">加注释</td></tr><tr><td style="text-align:center;">修改用户</td><td style="text-align:center;">usermod [选项] 用户名</td><td style="text-align:left;">修改用户信息</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-g</td><td style="text-align:left;">表示指定用户的用户主组，可以是用户组的id，也可以是组名（主组在passwd里查看）</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-G</td><td style="text-align:left;">表示指定用户的用户附加组，可以是用户组的id，也可以是组名（附加组在group里查看）</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-u</td><td style="text-align:left;">用户的id（用户的标识符），系统默认会从500之后按顺序分配uid</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-l</td><td style="text-align:left;">修改用户名</td></tr><tr><td style="text-align:center;">设置用户密码</td><td style="text-align:center;">passwd 用户名</td><td style="text-align:left;">给用户设置密码</td></tr><tr><td style="text-align:center;">切换用户</td><td style="text-align:center;">su [用户名]</td><td style="text-align:left;">切换要登录的用户</td></tr><tr><td style="text-align:center;">删除用户</td><td style="text-align:center;">userdel 用户名</td><td style="text-align:left;">删除指定用户</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-r</td><td style="text-align:left;">同时删除其家目录</td></tr><tr><td style="text-align:center;">添加用户组</td><td style="text-align:center;">groupadd [选项] 用户组名</td><td style="text-align:left;">添加新用户组</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-g</td><td style="text-align:left;">设置自定义的用户组id，系统默认会从500之后按顺序分配</td></tr><tr><td style="text-align:center;">修改用户组</td><td style="text-align:center;">groupmod [选项] 用户组名</td><td style="text-align:left;">修改用户组信息</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-g</td><td style="text-align:left;">设置自定义的用户组id，系统默认会从500之后按顺序分配</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-n</td><td style="text-align:left;">修改用户组名</td></tr><tr><td style="text-align:center;">删除用户组</td><td style="text-align:center;">groupdel 用户组名</td><td style="text-align:left;">删除指定用户组</td></tr></tbody></table><h3 id="_6-3-ssh服务" tabindex="-1"><a class="header-anchor" href="#_6-3-ssh服务"><span>6.3 SSH服务</span></a></h3><ul><li>ssh:secure shell 安全外壳协议，可以用于远程连接协议和远程文件传输协议。</li><li>协议使用端口号：默认是22。</li><li>配置文件：/etc/ssh/ssh_config。</li><li>终端工具主要帮助连接远程的服务器，常见终端工具有：Xshell、secureCRT、Putty等。</li></ul><p>PSCP语法：</p><ol><li>pscp [选项] 用户名@linux主机地址:资源路径 windows本地的地址（下载到win）</li><li>pscp [选项] 资源路径 用户名@linux主机地址:远程路径（上传到linux）</li><li>pscp [选项] -ls 用户名@linux主机地址（列出远程路径下结构）</li></ol><h3 id="_6-4-设置主机名" tabindex="-1"><a class="header-anchor" href="#_6-4-设置主机名"><span>6.4 设置主机名</span></a></h3><ul><li>hostname [新的主机名]：只能暂时修改，重启后恢复默认的localhost</li><li>修改etc/sysconfig/network后重启才是永久修改</li><li>hostnamectl set-hostname shiyanshi</li><li>加入本地地址才能访问127.0.0.1，需要修改/etc/hosts。</li></ul><h3 id="_6-5-自启动管理" tabindex="-1"><a class="header-anchor" href="#_6-5-自启动管理"><span>6.5 自启动管理</span></a></h3><ul><li>提供开启启动项的管理服务 chkconfig</li></ul><table><thead><tr><th style="text-align:center;">指令</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">chkconfig --list</td><td style="text-align:left;">查看自启动服务的信息</td></tr><tr><td style="text-align:center;">chkconfig --del 服务名</td><td style="text-align:left;">删除自启动的服务</td></tr><tr><td style="text-align:center;">systemctl list-dependencies [target]</td><td style="text-align:left;">查看自启动服务的信息</td></tr><tr><td style="text-align:center;">systemctl enable crond.service</td><td style="text-align:left;">开机启动 .service可以省略</td></tr><tr><td style="text-align:center;">systemctl disable crond.service</td><td style="text-align:left;">禁止开机启动</td></tr><tr><td style="text-align:center;">systemctl status crond.service</td><td style="text-align:left;">查看服务状态</td></tr><tr><td style="text-align:center;">systemctl start crond.service</td><td style="text-align:left;">启动服务</td></tr><tr><td style="text-align:center;">systemctl stop crond.service</td><td style="text-align:left;">停止服务</td></tr><tr><td style="text-align:center;">systemctl restart crond.service</td><td style="text-align:left;">重启服务</td></tr><tr><td style="text-align:center;">systemctl is-enabled crond.service</td><td style="text-align:left;">查看某个服务是否开机启动</td></tr></tbody></table><h3 id="_6-6-ntp时间" tabindex="-1"><a class="header-anchor" href="#_6-6-ntp时间"><span>6.6 NTP时间</span></a></h3><ul><li>用于对计算机的时间同步管理操作</li><li>根时间服务器<a href="http://www.ntp.org.cn/" target="_blank" rel="noopener noreferrer">全球可用的NTP服务器列表与解析服务</a></li><li>ntpdate 时间服务器的域名/ip</li><li>有了ntp服务后就可以自动设置时间了</li></ul><h3 id="_6-7-防火墙" tabindex="-1"><a class="header-anchor" href="#_6-7-防火墙"><span>6.7 防火墙</span></a></h3><ul><li>用于防范网络攻击，可分为硬件防火墙和软件防火墙。国家长城防火墙GFW。</li><li>选择性让网阔请求通过（iptables，firewalld）</li><li>其服务操作使用systemctl，查看规则使用iptables -L -n。其中-L表示列出规则，-n表示以数字形式展示。</li></ul><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">firewall-cmd --add-port=80/tcp --permanent</td><td style="text-align:center;">永久添加8080端口例外(全局)</td></tr><tr><td style="text-align:left;">firewall-cmd --remove-port=80/tcp --permanent</td><td style="text-align:center;">永久删除8080端口例外(全局)</td></tr></tbody></table><h3 id="_6-8-rpm管理" tabindex="-1"><a class="header-anchor" href="#_6-8-rpm管理"><span>6.8 RPM管理</span></a></h3><ul><li>对于linux服务器上的软件包及逆行管理操作：查询、安装（更新）、卸载</li></ul><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">rpm -qa|grep 关键词</td><td style="text-align:center;">查询</td></tr><tr><td style="text-align:left;">rpm -e 软件的名称</td><td style="text-align:center;">删除</td></tr><tr><td style="text-align:left;">rpm -e 软件的名称 --nodeps</td><td style="text-align:center;">强制删除</td></tr><tr><td style="text-align:left;">rpm -ivh 软件包名称</td><td style="text-align:center;">软件安装</td></tr></tbody></table><p>^9756ce</p><h3 id="_6-9-cron-crontab计划任务" tabindex="-1"><a class="header-anchor" href="#_6-9-cron-crontab计划任务"><span>6.9 cron/crontab计划任务</span></a></h3><ul><li>语法指令</li></ul><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">crontab -l</td><td style="text-align:center;">list，列出指定用户的计划任务列表</td></tr><tr><td style="text-align:left;">crontab -e</td><td style="text-align:center;">edit，编辑指定用户的计划任务列表</td></tr><tr><td style="text-align:left;">crontab -u</td><td style="text-align:center;">user，指定的用户名，如果不指定，则表示当前用户</td></tr><tr><td style="text-align:left;">crontab -r</td><td style="text-align:center;">remove，删除指定用户的计划任务列表</td></tr></tbody></table><ul><li>计划任务的规则与格式</li></ul><ol><li>以行为单位，一行表示一个计划</li><li>分 时 日 月 周 需要执行的命令(0 0 * * * reboot表示每天0点0分重启)</li><li>可以用正则表达式，例如每10分钟可以写为*/10 1,2,6 1-3 * * reboot</li></ol><ul><li>黑名单配置（禁止其中的用户配置计划任务）： /etc/cron.deny里写用户名，每行一个</li><li>白名单配置（允许其中的用户配置计划任务）： /etc/cron.allow里写用户名，每行一个</li></ul><h2 id="_7-设备挂载" tabindex="-1"><a class="header-anchor" href="#_7-设备挂载"><span>7. 设备挂载</span></a></h2><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">lsblk</td><td style="text-align:left;">查看块状设备的信息（Name:名称，Size:设备大小，Type:类型，MountPoint:挂载点）</td></tr><tr><td style="text-align:left;">umount 当前设备的挂载点（路径）</td><td style="text-align:left;">解除挂载</td></tr><tr><td style="text-align:left;">mount 设备原始地址 要挂载的位置路径</td><td style="text-align:left;">挂载（所有块状内存设备原始地址都在/dev/下，新地址建议放在/mnt/下）</td></tr></tbody></table><h2 id="_8-权限管理" tabindex="-1"><a class="header-anchor" href="#_8-权限管理"><span>8. 权限管理</span></a></h2><ul><li>Linux系统一般将文件可存/取访问的身份分为3个类别：owner、group、others，且3种身份各有read、write、execute等权限。</li></ul><h3 id="_8-1-身份介绍" tabindex="-1"><a class="header-anchor" href="#_8-1-身份介绍"><span>8.1 身份介绍</span></a></h3><ul><li>Owner身份（文件所有者，默认为文档的创建者）</li><li>Group身份（与文件所有者同组的用户）</li><li>Others身份（其他人，相对于所有者）</li><li>Root用户（超级用户）</li></ul><h3 id="_8-2-权限介绍" tabindex="-1"><a class="header-anchor" href="#_8-2-权限介绍"><span>8.2 权限介绍</span></a></h3><ul><li>读权限：</li></ul><ol start="4"><li>对于文件夹来说，读权限影响用户是否能够列出目录结构</li><li>对于文件来说，读权限影响用户是否可以查看文件内容</li></ol><ul><li>写权限：</li></ul><ol start="6"><li>对文件夹来说，写权限影响用户是否可以在文件夹下“创建/删除/复制到/移动到”文档</li><li>对于文件来说，写权限影响用户是否可以编辑文件内容</li></ol><ul><li>执行权限：</li></ul><ol start="8"><li>一般都是对于文件来说，特别脚本文件。</li></ol><ul><li>权限查看：ls -l，ll</li></ul><p><img src="'+u+'" alt="600"></p><h3 id="_8-3-权限设置" tabindex="-1"><a class="header-anchor" href="#_8-3-权限设置"><span>8.3 权限设置</span></a></h3><ul><li>chmod [选项] 权限模式 文档/文件夹，其中选项-R：递归设置权限 （当文档类型为文件夹的时候）</li><li>如果想要给文档设置权限，操作者要么是root用户，要么就是文档的所有者。</li><li>当rwx权限全都有的时候，这个文件/文件夹会显示为蓝色（ugo都能执行的是绿色）</li><li>权限模式：字母形式，数字形式</li></ul><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:center;">字母</th><th style="text-align:left;">介绍(字母模式)</th></tr></thead><tbody><tr><td style="text-align:center;">谁</td><td style="text-align:center;">u</td><td style="text-align:left;">用户</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">g</td><td style="text-align:left;">用户组</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">o</td><td style="text-align:left;">其他人</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">a</td><td style="text-align:left;">所有人（包括ugo）,省略默认就是a</td></tr><tr><td style="text-align:center;">作用方式</td><td style="text-align:center;">+</td><td style="text-align:left;">增加权限（相对当前的）</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">-</td><td style="text-align:left;">减少权限（相对当前的）</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">=</td><td style="text-align:left;">设置权限（直接设置成指令中）</td></tr><tr><td style="text-align:center;">权限</td><td style="text-align:center;">r</td><td style="text-align:left;">可读</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">w</td><td style="text-align:left;">可写</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">x</td><td style="text-align:left;">可执行</td></tr></tbody></table><blockquote><p>chmod u+x,g+rx,o+rx test.txt</p></blockquote><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:center;">介绍（数字模式）</th></tr></thead><tbody><tr><td style="text-align:center;">0</td><td style="text-align:center;">---</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:center;">--x</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">-w-</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">-wx</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">r--</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">r-x</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">rw-</td></tr><tr><td style="text-align:center;">7</td><td style="text-align:center;">rwx</td></tr></tbody></table><blockquote><p>chmod 777 test.txt（这个ugo中间不需要加逗号）</p></blockquote><h3 id="_8-4-属主与属组" tabindex="-1"><a class="header-anchor" href="#_8-4-属主与属组"><span>8.4 属主与属组</span></a></h3><ul><li>属主：所属的用户（文件的主人）</li><li>属组：所属的用户组</li></ul><p><img src="'+h+'" alt="600"></p><ul><li>这两项信息在文档创建的时候会使用创建者的信息（用户名、用户所属的主组名称）。</li><li>如果有时候去删除某个用户，则该用户对应的文档的属主和属组信息就需要去修改。</li></ul><table><thead><tr><th style="text-align:center;">指令</th><th style="text-align:center;">介绍</th></tr></thead><tbody><tr><td style="text-align:center;">chown [-R] username 文档路径</td><td style="text-align:center;">更改文档的的所属用户（-R在处理文件夹时递归设置）</td></tr><tr><td style="text-align:center;">chgrp [-R] groupname 文档路径</td><td style="text-align:center;">更改文档的所属用户组</td></tr><tr><td style="text-align:center;">chown [-R] username:groupname 文档路径</td><td style="text-align:center;">更改文档的的所属用户和所属用户组</td></tr></tbody></table><h3 id="_5-8-sudo" tabindex="-1"><a class="header-anchor" href="#_5-8-sudo"><span>5.8 sudo</span></a></h3><ul><li>reboot、shutdown、init、halt、user管理，在普通用户身份上都是操作不了，但是有些特殊的情况下又需要有执行权限。又不可能让root用户把自己的密码告诉普通用户。</li><li>sudo可以让管理员（root）事先定义某些特殊命令谁可以执行</li><li>/etc/sudoers，编辑需要用visudo sudoers。</li><li>配置格式： root ALL=(ALL) ALL</li></ul><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">root</td><td style="text-align:left;">表示用户名，如果是用户组，则可以写成“%组名”</td></tr><tr><td style="text-align:center;">ALL</td><td style="text-align:left;">表示允许登录的主机（地址白名单）</td></tr><tr><td style="text-align:center;">(ALL)</td><td style="text-align:left;">表示以谁的身份执行，ALL表示root身份</td></tr><tr><td style="text-align:center;">ALL</td><td style="text-align:left;">表示当前用户可以执行的命令，多个命令可以使用“,”分割</td></tr></tbody></table><ul><li><p>在写sudo规则的时候不建议写直接形式的命令，而是写命令的完整路径。可以用which来找指令的二进制文件地址：adminwwq ALL=(ALL) /usr/sbin/useradd, /usr/bin/passwd [A-Za-z]*, !/usr/bin/passwd &quot;&quot;, !/usr/bin/passwd root</p></li><li><p>之后执行配置好的命令需要先加个sudo： sudo useradd admintest</p></li><li><p>普通用户查看自己具有的特殊权限：sudo  -l</p></li></ul><h2 id="_9-网络基础" tabindex="-1"><a class="header-anchor" href="#_9-网络基础"><span>9. 网络基础</span></a></h2><h3 id="_9-1网络分类" tabindex="-1"><a class="header-anchor" href="#_9-1网络分类"><span>9.1网络分类</span></a></h3><ol start="9"><li><strong>局域网</strong>（Local Area Network，<strong>LAN</strong>）是指范围在几百米到十几公里内办公楼群或校园内的计算机相互连接所构成的计算机网络。</li><li><strong>城域网</strong>（Metropolitan Area Network，<strong>MAN</strong>）所采用的技术基本上与局域网相类似，只是规模上要大一些。城域网既可以覆盖相距不远的几栋办公楼，也可以覆盖一个城。</li><li><strong>广域网</strong>（Wide Area Network，<strong>WAN</strong>）通常跨接很大的物理范围，如一个国家。</li></ol><ul><li>网络还可以按照所有者分为公网、私网这两种Internet的接入方式。</li><li>公网接入方式：上网的计算机得到的IP地址是Internet上的非保留地址，公网的计算机和Internet上的其他计算机可随意互相访问。私网则反之。</li><li>IP是英文Internet Protocol的缩写，意思是“网络之间互连的协议”，也就是为计算机网络相互连接进行通信而设计的<strong>协议</strong>。</li><li>IP地址类型分为：公有地址、私有地址</li><li>公有地址（Public address）：由Inter NIC（Internet Network Information Center因特网信息中心）负责。这些IP地址分配给注册并向Inter NIC提出申请的组织机构。通过它直接访问因特网。</li></ul><table><thead><tr><th>类别</th><th>最大网络数</th><th>IP地址范围</th><th>最大主机数</th><th>私有IP地址范围</th></tr></thead><tbody><tr><td>A</td><td>126（2^7-2)</td><td>1.0.0.0-127.255.255.255</td><td>16777214</td><td>10.0.0.0-10.255.255.255</td></tr><tr><td>B</td><td>16384(2^14)</td><td>128.0.0.0-191.255.255.255</td><td>65534</td><td>172.16.0.0-172.31.255.255</td></tr><tr><td>C</td><td>2097152(2^21)</td><td>192.0.0.0-223.255.255.255</td><td>254</td><td>192.168.0.0-192.168.255.255</td></tr></tbody></table><ul><li>私有地址：私有地址（Private address）属于非注册地址，专门为组织机构内部使用。以下列出留用的内部私有地址：</li></ul><ol start="12"><li>A类 10.0.0.0--10.255.255.255</li><li>B类 172.16.0.0--172.31.255.255</li><li>C类 192.168.0.0--192.168.255.255</li></ol><h3 id="_9-2-网络设备" tabindex="-1"><a class="header-anchor" href="#_9-2-网络设备"><span>9.2 网络设备</span></a></h3><ul><li>网卡是一个网络组件，属于硬件范畴，主要负责计算机之间数据的封装和解封。</li><li>MAC地址：网卡的物理地址，网卡设备的编号，<strong>默认</strong>情况是全球唯一的（16进制）。</li><li>MAC与IP对比</li></ul><ol><li>长度不同。IP地址为32位，MAC地址为48位。</li><li>分配依据不同。</li><li>网络寻址方式不同。OSI参考模型，ip地址是基于第三层工作（网络层），mac地址是第二层（数据链路层）</li></ol><ul><li>网线是连接局域网必不可少的。在局域网中常见的网线主要有双绞线（RJ45接口）、铜轴电缆、光缆三种。</li><li>交换机（Switch）意为“开关”，是一种用于电（光）信号转发的网络设备，交换机它可以为接入交换机的任意两个网络节点提供独享的电信号通路。</li><li>路由器（Router）又称网关设备（Gateway）是用于连接多个逻辑上分开、相对独立的网络。</li></ul><h3 id="_9-3-拓扑结构图" tabindex="-1"><a class="header-anchor" href="#_9-3-拓扑结构图"><span>9.3 拓扑结构图</span></a></h3><ul><li>结构类型：</li></ul><ol><li>星型拓扑结构</li><li>总线型拓扑结构</li><li>环型拓扑结构</li><li>树型拓扑结构</li><li>网络拓扑结构</li><li>混合型拓扑结构</li><li>蜂窝型结构</li></ol><h3 id="_9-4-网络命令" tabindex="-1"><a class="header-anchor" href="#_9-4-网络命令"><span>9.4 网络命令</span></a></h3><ul><li>ARP：地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取（MAC）物理地址的协议。</li></ul><p><img src="'+b+'" alt="600"></p><blockquote><p>[!note] 当一个主机发送数据时，首先查看本机MAC地址缓存中有没有目标主机的MAC地址， 如果有就使用缓存中的结果；如果没有，ARP协议就会发出一个广播包，该广播包要求查询目标主机IP地址对应的MAC地址，拥有该IP地址的主机会发出回应，回应中包括了目标主机的MAC地址，这样发送方就得到了目标主机的MAC地址。如果目标主机不在本地子网中，则ARP解析到的MAC地址是默认网关的MAC地址。</p></blockquote><table><thead><tr><th style="text-align:center;">指令</th><th style="text-align:left;">介绍</th></tr></thead><tbody><tr><td style="text-align:center;">ping 主机地址（IP地址/主机名/域名）</td><td style="text-align:left;">测试当前主机与目标主机的连通性</td></tr><tr><td style="text-align:center;">netstat -tnlp</td><td style="text-align:left;">查看网络的连接信息(-t：tcp协议，-n：字母转化成数字，-l：列出状态为监听，-p：显示进程相关信息)</td></tr><tr><td style="text-align:center;">netstat -an</td><td style="text-align:left;">查看网络的连接信息(-a：全部，-n：字母转化成数字)</td></tr><tr><td style="text-align:center;">traceroute  主机地址</td><td style="text-align:left;">查找当前主机与目标主机之间所有的网关（路由器，会给沿途各个路由器发送icmp数据包，路由器可能会不给响应）。</td></tr><tr><td style="text-align:center;">arp -a</td><td style="text-align:left;">查看本地缓存mac表</td></tr><tr><td style="text-align:center;">arp -d 地址</td><td style="text-align:left;">删除指定的缓存记录</td></tr><tr><td style="text-align:center;">tcpdump [协议] port 端口号</td><td style="text-align:left;">抓取本机的指定端口的数据包</td></tr><tr><td style="text-align:center;">tcpdump host 地址</td><td style="text-align:left;">抓取本机与指定主机的数据包</td></tr><tr><td style="text-align:center;">tcpdump -i 网卡设备名</td><td style="text-align:left;">抓取本机的指定网卡的数据包</td></tr></tbody></table><h3 id="_9-5-项目上线" tabindex="-1"><a class="header-anchor" href="#_9-5-项目上线"><span>9.5 项目上线</span></a></h3><ul><li>流程：</li></ul><ol><li>购买服务器</li><li>购买域名</li><li>域名备案</li><li>域名解析</li><li>配置生产环境</li><li>上传代码</li></ol><ul><li>域名解析：将域名绑定到一个服务器地址的操作</li><li>DNS：domain name server，用于将域名转化成ip地址的服务器。</li></ul><p><img src="'+m+`" alt="600"></p><h2 id="_10-shell编程" tabindex="-1"><a class="header-anchor" href="#_10-shell编程"><span>10. Shell编程</span></a></h2><h3 id="_10-1-shell基础" tabindex="-1"><a class="header-anchor" href="#_10-1-shell基础"><span>10.1 Shell基础</span></a></h3><ul><li>Shell：是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。Shell既是一种命令语言，又是一种程序设计语言。</li><li>Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。</li><li>脚本：简单地说就是一条条的文字命令，这些文字命令是可以看到的（如可以用记事本打开查看、编辑）。（例如JavaScript（JS，前端），VBScript， ASP，JSP，PHP（后端），SQL（数据库操作语言），Perl，Shell，python，Ruby，JavaFX，Lua等。）</li><li>Shell属于内置的脚本(程序开发的效率非常高，依赖于功能强大的命令可以迅速地完成开发任务（批处理）)</li><li>在linux中有很多类型的shell，不同的shell具备不同的功能，shell还决定了脚本中函数的语法，Linux中默认的shell*/bin/bash（重点），流行的shell有ash、bash、ksh、csh、zsh等，不同的shell都有自己的特点以及用途。</li><li>大多数Linux系统默认使用的shell/就是bin/bash，它还是sh的升级版。</li><li>脚本本身是没有状态的，需要触发才能执行</li></ul><h3 id="_10-2-编写规范" tabindex="-1"><a class="header-anchor" href="#_10-2-编写规范"><span>10.2 编写规范</span></a></h3><ul><li>代码规范</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash [指定告知系统当前这个脚本要使用的shell解释器]</span></span>
<span class="line">Shell相关指令</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>文件命名规范</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">文件名.sh <span class="token punctuation">[</span>.sh是linux下bash shell 的默认后缀<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>创建sh文件</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">touch</span> test.sh</span>
<span class="line"><span class="token function">vim</span> test.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>编写sh文件</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&#39;helloworld&#39;</span></span>
<span class="line"><span class="token comment">#输出的内容如果包含字母和符号（不包含变量），则需要用引号包括起来。如果是纯数字可以包也可以不包。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>执行shell脚本（脚本必须得有执行权限）</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">./test.sh</span>
<span class="line">/bin/bash /oo/test.sh</span>
<span class="line">/bin/bash test.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>[!note] 这里在运行时一定要写成 ./test.sh，而不是 test.sh，运行其它二进制的程序也一样，直接写 test.sh，Linux 系统会去 PATH（环境变量） 里寻找有没有叫 test.sh 的，而只有 /bin, /sbin, /usr/bin，/usr/sbin 等在 PATH 里，你的当前目录通常不在 PATH 里，所以写成 test.sh 是会找不到命令的，要用 ./test.sh 告诉系统说，就在当前目录找。</p></blockquote><h3 id="_10-3-shell语法" tabindex="-1"><a class="header-anchor" href="#_10-3-shell语法"><span>10.3 shell语法</span></a></h3><h4 id="_10-3-1-变量" tabindex="-1"><a class="header-anchor" href="#_10-3-1-变量"><span>10.3.1 变量</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&#39;helloworld&#39;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;helloworld&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&#39;10&#39;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;20&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token number">100</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">str</span><span class="token operator">=</span><span class="token string">&quot;helloworld&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$str</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +<span class="token string">&quot;%F %T&quot;</span><span class="token variable">\`</span></span>&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>变量名后面的等号左右不能有空格</li><li>双引号能够识别变量，双引号能够实现转义（类似于\\t)，单引号是不能识别变量，只会原样输出，单引号是不能转义的。</li><li>当在脚本中需要执行一些指令并且将执行的结果赋给变量的时候需要使用“反引号”</li></ul><h4 id="_10-3-2-只读变量" tabindex="-1"><a class="header-anchor" href="#_10-3-2-只读变量"><span>10.3.2 只读变量</span></a></h4><ul><li>语法：readonly 变量名</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token assign-left variable">a</span><span class="token operator">=</span><span class="token number">10</span></span>
<span class="line"><span class="token builtin class-name">readonly</span> a</span>
<span class="line"><span class="token assign-left variable">a</span><span class="token operator">=</span><span class="token number">20</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$a</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-3-3-接收输入" tabindex="-1"><a class="header-anchor" href="#_10-3-3-接收输入"><span>10.3.3 接收输入</span></a></h4><ul><li>语法：read  -p 提示信息 变量名</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&#39;请输入文件名：&#39;</span> filepath</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_10-3-4-删除变量" tabindex="-1"><a class="header-anchor" href="#_10-3-4-删除变量"><span>10.3.4 删除变量</span></a></h4><ul><li>语法：unset 变量名</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token assign-left variable">a</span><span class="token operator">=</span><span class="token number">10</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$a</span></span>
<span class="line"><span class="token builtin class-name">unset</span> a</span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$a</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-3-5-条件判断" tabindex="-1"><a class="header-anchor" href="#_10-3-5-条件判断"><span>10.3.5 条件判断</span></a></h4><ul><li>语法中记得加空格</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">a</span><span class="token operator">=</span><span class="token number">10</span></span>
<span class="line"><span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token number">20</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&#39;请输入数字：&#39;</span> number</span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$number</span></span>
<span class="line"><span class="token builtin class-name">echo</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$number</span> <span class="token operator">==</span> <span class="token variable">$a</span> <span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">then</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token variable">$a</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$number</span> <span class="token operator">==</span> <span class="token variable">$a</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$a</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$number</span> <span class="token operator">==</span> <span class="token variable">$a</span> <span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">then</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token variable">$a</span></span>
<span class="line"><span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$number</span> <span class="token operator">==</span> <span class="token variable">$b</span> <span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">then</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token variable">$b</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token variable">$number</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-3-6-运算符" tabindex="-1"><a class="header-anchor" href="#_10-3-6-运算符"><span>10.3.6 运算符</span></a></h4><ul><li>运算符和其他编程脚本语言一样，常见的有算数运算符、关系运算符、逻辑运算符、字符串运算符、文件测试运算符等</li><li>原生bash不支持简单的数学运算，但是可以通过其他命令来实现，例如 awk 和 expr，expr 最常用。expr 是一款表达式计算工具，使用它能完成表达式的求值操作。</li><li>表达式和运算符之间要有空格 <code>expr 2+2</code>不对，应该是<code>expr 2 + 2</code>，写在shell中要用反引号包起来。</li><li>关系运算符只支持数字，不支持字符串，除非字符串的值是数字。</li><li>==和-eq是一样的，但是大于小于只能用指令。</li><li>权限rwx的判断，如果只有一个部分符合，则认为是有权限的。</li></ul><blockquote><p>[!note] 除了赋值时等号两边不允许有空格，剩下情况符号周围都得空格。</p></blockquote><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:left;">说明</th><th style="text-align:left;">举例(a=10,b=20,c=&quot;abc&quot;,d=&quot;efg&quot;, file=&quot;/etc/oo&quot;,file=&quot;/etc/oo/test.txt&quot;)</th></tr></thead><tbody><tr><td style="text-align:center;">算数运算符</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">+</td><td style="text-align:left;">加法</td><td style="text-align:left;"><code>expr $a + $b</code> 结果为 30。</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:left;">减法</td><td style="text-align:left;"><code>expr $a - $b</code> 结果为 -10。</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:left;">乘法</td><td style="text-align:left;"><code>expr $a \\* $b</code> 结果为  200。</td></tr><tr><td style="text-align:center;">/</td><td style="text-align:left;">除法</td><td style="text-align:left;"><code>expr $b / $a</code> 结果为 2。</td></tr><tr><td style="text-align:center;">%</td><td style="text-align:left;">取余</td><td style="text-align:left;"><code>expr $b % $a</code> 结果为 0。</td></tr><tr><td style="text-align:center;">=</td><td style="text-align:left;">赋值</td><td style="text-align:left;">a=$b 将把变量 b 的值赋给 a。</td></tr><tr><td style="text-align:center;">==</td><td style="text-align:left;">相等。用于比较两个数字，相同返回true</td><td style="text-align:left;">[ $a == $b ] 返回 false</td></tr><tr><td style="text-align:center;">!=</td><td style="text-align:left;">不相等。用于比较两个数字，不相同返回true</td><td style="text-align:left;">[ $a != $b ] 返回 true。</td></tr><tr><td style="text-align:center;">关系运算符</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">-eq</td><td style="text-align:left;">检测是否相等</td><td style="text-align:left;">[ $a -eq $b ] 返回 false。</td></tr><tr><td style="text-align:center;">-ne</td><td style="text-align:left;">检测是否不相等</td><td style="text-align:left;">[ $a -ne $b ] 返回 true。</td></tr><tr><td style="text-align:center;">-gt</td><td style="text-align:left;">是否大于</td><td style="text-align:left;">[ $a -gt $b ] 返回 false。</td></tr><tr><td style="text-align:center;">-lt</td><td style="text-align:left;">是否小于</td><td style="text-align:left;">[ $a -lt $b ] 返回 true。</td></tr><tr><td style="text-align:center;">-ge</td><td style="text-align:left;">是否大于等于</td><td style="text-align:left;">[ $a -ge $b ] 返回 false。</td></tr><tr><td style="text-align:center;">-le</td><td style="text-align:left;">是否小于等于</td><td style="text-align:left;">[ $a -le $b ] 返回 true。</td></tr><tr><td style="text-align:center;">逻辑运算符</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">!</td><td style="text-align:left;">非运算</td><td style="text-align:left;">[ ! false ] 返回 true。</td></tr><tr><td style="text-align:center;">-o</td><td style="text-align:left;">或（或者）运算</td><td style="text-align:left;">[ $a -lt 20 -o $b -gt 100 ] 返回 true。</td></tr><tr><td style="text-align:center;">-a</td><td style="text-align:left;">与（并且）运算</td><td style="text-align:left;">[ $a -lt 20 -a $b -gt 100 ] 返回 false。</td></tr><tr><td style="text-align:center;">字符串运算符</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">=</td><td style="text-align:left;">检测两个字符串是否相等</td><td style="text-align:left;">[ $c = $d ] 返回 false。</td></tr><tr><td style="text-align:center;">!=</td><td style="text-align:left;">检测两个字符串是否不相等</td><td style="text-align:left;">[ $c != $d ] 返回 true。</td></tr><tr><td style="text-align:center;">-z</td><td style="text-align:left;">检测字符串长度是否为0</td><td style="text-align:left;">[ -z $a ] 返回 false。</td></tr><tr><td style="text-align:center;">-n</td><td style="text-align:left;">检测字符串长度是否不为0</td><td style="text-align:left;">[ -n $a ] 返回 true。</td></tr><tr><td style="text-align:center;">str</td><td style="text-align:left;">检测字符串</td><td style="text-align:left;">[ $a ] 返回 true。</td></tr><tr><td style="text-align:center;">文件测试运算符</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">-r file</td><td style="text-align:left;">检测文件是否可读</td><td style="text-align:left;">[ -r $file ] 返回 true。</td></tr><tr><td style="text-align:center;">-w file</td><td style="text-align:left;">检测文件是否可写</td><td style="text-align:left;">[ -w $file ] 返回 true。</td></tr><tr><td style="text-align:center;">-x file</td><td style="text-align:left;">检测文件是否可执行</td><td style="text-align:left;">[ -x $file ] 返回 true。</td></tr><tr><td style="text-align:center;">-s file</td><td style="text-align:left;">检测文件（文件大小是否大于0）</td><td style="text-align:left;">[ -s $file ] 返回 true。</td></tr><tr><td style="text-align:center;">-e file</td><td style="text-align:left;">检测文件（包括目录）是否存在</td><td style="text-align:left;">[ -e $file ] 返回 true。</td></tr><tr><td style="text-align:center;">-d file</td><td style="text-align:left;">检测文件是否是目录</td><td style="text-align:left;">[ -d $file ] 返回 false。</td></tr><tr><td style="text-align:center;">-f file</td><td style="text-align:left;">检测文件是否是普通文件（既不是目录，也不是设备文件）</td><td style="text-align:left;">[ -f $file ] 返回 true。</td></tr><tr><td style="text-align:center;">-b file</td><td style="text-align:left;">检测文件是否是块设备文件，如果是，则返回 true。</td><td style="text-align:left;">[ -b $file ] 返回 false。</td></tr><tr><td style="text-align:center;">-c file</td><td style="text-align:left;">检测文件是否是字符设备文件，如果是，则返回 true。</td><td style="text-align:left;">[ -c $file ] 返回 false。</td></tr><tr><td style="text-align:center;">-g file</td><td style="text-align:left;">检测文件是否设置了 SGID 位</td><td style="text-align:left;">[ -g $file ] 返回 false。</td></tr><tr><td style="text-align:center;">-k file</td><td style="text-align:left;">检测文件是否设置了粘着位(Sticky Bit)</td><td style="text-align:left;">[ -k $file ] 返回 false。</td></tr><tr><td style="text-align:center;">-u file</td><td style="text-align:left;">检测文件是否设置了 SUID 位</td><td style="text-align:left;">[ -u $file ] 返回 false。</td></tr><tr><td style="text-align:center;">-p file</td><td style="text-align:left;">检测文件是否是有名管道</td><td style="text-align:left;">[ -p $file ] 返回 false。</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token assign-left variable">a</span><span class="token operator">=</span><span class="token number">10</span></span>
<span class="line"><span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token number">20</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;a=<span class="token variable">$a</span>&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;b=<span class="token variable">$b</span>&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;a + b = &quot;</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">expr</span> $a + $b<span class="token variable">\`</span></span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;a - b = &quot;</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">expr</span> $a - $b<span class="token variable">\`</span></span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;a * b = &quot;</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">expr</span> $a <span class="token punctuation">\\</span>* $b<span class="token variable">\`</span></span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;a / b = &quot;</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">expr</span> $a / $b<span class="token variable">\`</span></span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;a % b = &quot;</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">expr</span> $a % $b<span class="token variable">\`</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-3-7-脚本附带选项" tabindex="-1"><a class="header-anchor" href="#_10-3-7-脚本附带选项"><span>10.3.7 脚本附带选项</span></a></h4><ul><li>在脚本中可以用“$1”来表示第一个选项参数，“$2”来表示第二个选项，以此类推。其实$1、$2本质是变量，但是只能用，用户创建这样的用户名是不合法的。</li><li>$0是执行的脚本自身的路径。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$0</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$1</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$2</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token variable">$3</span></span>
<span class="line"></span>
<span class="line">./test2.sh a b c</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-数据库" tabindex="-1"><a class="header-anchor" href="#_11-数据库"><span>11. 数据库</span></a></h2><h3 id="_11-1-数据库基础" tabindex="-1"><a class="header-anchor" href="#_11-1-数据库基础"><span>11.1 数据库基础</span></a></h3><ul><li>如果一个项目是动态（内容会变化的，网页后缀.jsp、.php、.shtml等）内容的话，则数据库是必不可少的一个环节。</li></ul><p><img src="`+f+'" alt="600"></p><ul><li>MySQL是一个关系型数据库管理系统，开源、跨平台、所占内存较小。</li></ul><h3 id="_11-2-软件安装" tabindex="-1"><a class="header-anchor" href="#_11-2-软件安装"><span>11.2 软件安装</span></a></h3><h4 id="_11-2-1-安装方式" tabindex="-1"><a class="header-anchor" href="#_11-2-1-安装方式"><span>11.2.1 安装方式</span></a></h4><table><thead><tr><th style="text-align:center;">安装方式</th><th style="text-align:left;">优点</th><th style="text-align:left;">缺点</th></tr></thead><tbody><tr><td style="text-align:center;">源码包安装（tar）</td><td style="text-align:left;">1. 开源，如果有足够的能力，可以修改源代码；2. 编译安装，更加适合自己的系统，稳定高效</td><td style="text-align:left;">1. 安装步骤较多，容易出错；2. 编译过程时间较长</td></tr><tr><td style="text-align:center;">二进制包安装（rpm）</td><td style="text-align:left;">包管理系统简单，只需要几个命令就可以实现包的安装，升级，查询和卸载</td><td style="text-align:left;">经过编译，不再可以看到源代码</td></tr><tr><td style="text-align:center;">向导式安装（yum）</td><td style="text-align:left;">1. 安装简单，快捷</td><td style="text-align:left;">1. 完全丧失了自定义性；2. 如果不更改软件来源的情况下，是需要联网才能使用yum的。</td></tr></tbody></table><h4 id="_11-2-2-源码包安装" tabindex="-1"><a class="header-anchor" href="#_11-2-2-源码包安装"><span>11.2.2 源码包安装</span></a></h4><ul><li><p>源码包安装：解包（解压缩）-&gt;配置（config/configure/bootstrap）-&gt;编译（make/bootstrapd）-&gt;安装（make install/bootstrapd install）</p></li><li><p>配置操作主要是指定软件的安装目录、需要的依赖在什么地方、指定不需要可选依赖、配置文件的路径、通用数据存储位置等等。</p></li><li><p>编译主要是用gcc编译c文件为机器文件</p></li><li><p>安装主要是根据先前的配置要求安装软件，并生成相应的指令bin目录，用户手册等</p></li></ul><table><thead><tr><th style="text-align:center;">功能</th><th style="text-align:left;">指令</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">解包</td><td style="text-align:left;">tar -zxvf *.tar.gz</td><td style="text-align:left;">-z或--gzip或--ungzip：通过gzip指令处理文件；-x或--extract或--get：从文件中还原文件；-v：显示操作过程；-f或--file：指定一个文件；</td></tr><tr><td style="text-align:center;">解包</td><td style="text-align:left;">tar -jxvf *.tar.bz2</td><td style="text-align:left;">-j：支持bzip2解压文件；；-x或--extract或--get：从文件中还原文件；-v：显示操作过程；-f或--file：指定一个文件；</td></tr><tr><td style="text-align:center;">配置</td><td style="text-align:left;">./configure --prefix=/usr/local/ncurses</td><td style="text-align:left;">指定了安装路径。指定安装的路径：--prefix=路径；需要依赖的路径：--with-PACKAGE名=[包所在的路径]；不需要依赖：--without-PACHAGE名</td></tr><tr><td style="text-align:center;">编译</td><td style="text-align:left;">make</td><td style="text-align:left;">前提是得在这个路径下</td></tr><tr><td style="text-align:center;">安装</td><td style="text-align:left;">make install</td><td style="text-align:left;">前提是得在这个路径下</td></tr><tr><td style="text-align:center;">编译且安装</td><td style="text-align:left;">make &amp;&amp; make install</td><td style="text-align:left;">前提是得在这个路径下</td></tr></tbody></table><h4 id="_11-2-3-二进制包安装" tabindex="-1"><a class="header-anchor" href="#_11-2-3-二进制包安装"><span>11.2.3 二进制包安装</span></a></h4>',169)),l("ul",null,[l("li",null,[t[1]||(t[1]=s("即rpm形式，")),d(n,{to:"/guide/knowledge/IT%E7%9F%A5%E8%AF%86/Linux%E5%9F%BA%E7%A1%80.html#_6.8%20RPM%E7%AE%A1%E7%90%86"},{default:r(()=>t[0]||(t[0]=[s("6.8 RPM管理")])),_:1,__:[0]})])]),t[3]||(t[3]=e(`<table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">rpm -qa|grep 关键词</td><td style="text-align:center;">查询</td></tr><tr><td style="text-align:left;">rpm -e 软件的名称</td><td style="text-align:center;">删除</td></tr><tr><td style="text-align:left;">rpm -e 软件的名称 --nodeps</td><td style="text-align:center;">强制删除，即忽略其依赖关系</td></tr><tr><td style="text-align:left;">rpm -ivh 软件包名称</td><td style="text-align:center;">软件安装</td></tr><tr><td style="text-align:left;">rpm -Uvh 软件包名称</td><td style="text-align:center;">软件更新</td></tr><tr><td style="text-align:left;">rpm -qf 文件路径</td><td style="text-align:center;">查询指定文件属于哪个包</td></tr></tbody></table><ul><li>lynx：没有GUI的浏览器</li></ul><h4 id="_11-2-4-yum等安装" tabindex="-1"><a class="header-anchor" href="#_11-2-4-yum等安装"><span>11.2.4 yum等安装</span></a></h4><ul><li>一般情况下会默认安装在/usr/lib/.</li></ul><table><thead><tr><th style="text-align:left;">指令</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">yum list [installed]</td><td style="text-align:center;">列出当前已经装的和可以装的软件（全部）</td></tr><tr><td style="text-align:left;">yum  search 包名</td><td style="text-align:center;">搜索指定的关键词的包</td></tr><tr><td style="text-align:left;">yum [-y] install 包名</td><td style="text-align:center;">安装指定的包（-y表示允许不再确认）</td></tr><tr><td style="text-align:left;">yum [-y] update[包名]</td><td style="text-align:center;">更新指定的包，不指定包则更新全部软件</td></tr><tr><td style="text-align:left;">yum [-y] remove 包名</td><td style="text-align:center;">卸载指定的包</td></tr></tbody></table><h3 id="_11-3-mysql安装" tabindex="-1"><a class="header-anchor" href="#_11-3-mysql安装"><span>11.3 MySQL安装</span></a></h3><ul><li>mysql默认端口号是3306</li><li>数据库存储目录：/var/lib/mysql</li><li>配置文件：/etc/my.cnf</li></ul><table><thead><tr><th style="text-align:left;">步骤</th><th style="text-align:center;">指令</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">安装服务端</td><td style="text-align:center;">yum install mysql-server</td><td style="text-align:left;">注意是服务端。不是客户端</td></tr><tr><td style="text-align:left;">启动mysql</td><td style="text-align:center;">systemctl start mysqld</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">初始化</td><td style="text-align:center;">mysql_secure_installation</td><td style="text-align:left;">设置密码，是否允许远程登录等</td></tr><tr><td style="text-align:left;">启动/关闭/重启</td><td style="text-align:center;">systemctl start/stop/restart mysqld</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">进入mysql</td><td style="text-align:center;">mysql -u 用户名 -p [密码]</td><td style="text-align:left;">建议这里不要输入密码，是明文显示</td></tr><tr><td style="text-align:left;">退出mysql</td><td style="text-align:center;">exit</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="_11-4-mysql操作" tabindex="-1"><a class="header-anchor" href="#_11-4-mysql操作"><span>11.4 MySQL操作</span></a></h3><ul><li>文件层级：数据库，数据表，记录（行），字段（列）。</li><li>MySQL指令不区分大小写</li><li>显示指定连接字符集，避免中文乱码，每次连接MySQL后都需要设置。Mysql&gt; set names utf-8</li><li>三码一致：服务器数据库的字符集+传输过程中字符集（set names）+客户端终端字符集</li></ul><div class="language-SQL line-numbers-mode" data-highlighter="prismjs" data-ext="SQL"><pre><code class="language-SQL"><span class="line">//库操作</span>
<span class="line">SHOW DATABASES;//显示当前MySQL中全部的数据库</span>
<span class="line">CREATE DATABASE 库名;//创建数据库</span>
<span class="line">DROP DATABASE 库名;//删除数据库</span>
<span class="line">USE 库名;//切换数据库</span>
<span class="line"></span>
<span class="line">//表操作</span>
<span class="line">CREATE TABLES 表名称 (</span>
<span class="line">	列名称1 数据类型 [NOT NULL AUTO_INCREMENT],</span>
<span class="line">	列名称2 数据类型,</span>
<span class="line">	列名称3 数据类型,</span>
<span class="line">	...,</span>
<span class="line">	PRIMARY KEY(主键字段名)</span>
<span class="line">);</span>
<span class="line">Create table oo(</span>
<span class="line">	Id int(11) not null auto_increment,</span>
<span class="line">	Username varchar(20),</span>
<span class="line">	Password char(32),</span>
<span class="line">	Primary key(Id)</span>
<span class="line">);</span>
<span class="line">//常见的数据类型：int（整型）、char（定长字符）、varchar（不定长字符）。</span>
<span class="line">//主键一般就是序号所在的那一列，主键不能重复。</span>
<span class="line">SHOW TABLES;</span>
<span class="line">DESC 表名;//查看表的结构</span>
<span class="line">DROP TABLE [IF EXISTS] 表名;//删除数据表</span>
<span class="line"></span>
<span class="line">//记录操作</span>
<span class="line">INSERT INTO 表名称 VALUES (值1, 值2,....);</span>
<span class="line">INSERT INTO 表名称 (列1,列2,...) VALUES (值1,值2,....);</span>
<span class="line">UPDATE 表名称 SET 列名称1 = 新值1,列名称2 = 新值2,… WHERE 列名称 = 某值;</span>
<span class="line">SELECT 列名称1,列名称2,… FROM 表名称 WHERE 条件;</span>
<span class="line">SELECT \\* FROM 表名称 WHERE 条件;</span>
<span class="line">DELETE FROM 表名称 WHERE 列名称 = 值;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>以下关于MySQL整体的操作是在bash环境下执行，需要退出MySQL</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">//备份（导出）</span>
<span class="line">//导出其实只有表操作，没有库级的操作</span>
<span class="line">mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">-A</span> <span class="token operator">&gt;</span> 备份文件路径//全量备份（数据+结构）</span>
<span class="line">mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123456</span> 库名 <span class="token operator">&gt;</span> 备份文件路径//指定库备份（数据+结构）</span>
<span class="line">mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123456</span> <span class="token parameter variable">--databases</span> db1 db2 <span class="token operator">&gt;</span> 备份文件路径//指定多个库备份（数据+结构）</span>
<span class="line"></span>
<span class="line">//还原（导入）</span>
<span class="line">//mysql命令行source还原方法</span>
<span class="line">//系统命令行还原方法</span>
<span class="line"></span>
<span class="line">mysql<span class="token operator">&gt;</span> <span class="token builtin class-name">source</span> 备份文件路径//mysql还原全部数据库:</span>
<span class="line">mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123456</span> <span class="token operator">&lt;</span> 备份文件路径//linux还原全部数据库</span>
<span class="line"></span>
<span class="line">//<span class="token punctuation">(</span>需指定数据库名，因为单个库的备份是没有库名字的，即需要先搭好新库，在新库里source<span class="token punctuation">)</span></span>
<span class="line">use 库名</span>
<span class="line"><span class="token builtin class-name">source</span> 备份文件路径//mysql还原指定单个数据库，mysql还原指定数据库的表</span>
<span class="line">mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123456</span> 库名 <span class="token operator">&lt;</span> 备份文件路径//linux还原指定单个数据库，linux还原指定数据库的表</span>
<span class="line"></span>
<span class="line">//（一个备份文件里有多个数据库的备份，此时不需要指定数据库）</span>
<span class="line"><span class="token builtin class-name">source</span> 备份文件路径//mysql还原指定多个数据库</span>
<span class="line">mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123456</span> <span class="token operator">&lt;</span> 备份文件路径//linux还原指定多个数据库</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>脚本执行定期备份demo</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment">## 在计划任务中执行该Shell脚本</span></span>
<span class="line"><span class="token assign-left variable">filename</span><span class="token operator">=</span><span class="token string">&quot;test_&quot;</span><span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +<span class="token string">&#39;%Y%m%d%H%M%S&#39;</span><span class="token variable">\`</span></span><span class="token string">&quot;.sql&quot;</span></span>
<span class="line">mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123456</span> <span class="token builtin class-name">test</span> <span class="token operator">&gt;</span> /root/<span class="token variable">$filename</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-5-mysql远程连接" tabindex="-1"><a class="header-anchor" href="#_11-5-mysql远程连接"><span>11.5 MySQL远程连接</span></a></h3><ul><li><p>B/S：B是指浏览器，S是指服务器。例如：百度搜索应用就属于BS架构软件。</p></li><li><p>C/S：C是指客户端，S是指服务器。例如：QQ、电脑端微信等应用程序都是CS架构。</p></li><li><p>BS中mysql典型的管理工具：PMA（phpMyAdmin）</p></li><li><p>CS中mysql典型的软件：navicat、mysql workbrach</p></li><li><p>修改可以远程连接的主机与用户字段，其位于mysql数据库的user表中的host，user字段。</p></li><li><p>host字段为“%”表示任意主机ip。</p></li><li><p>修改后需要刷新权限表（mysql&gt; flush privileges）或者重启mysql。</p></li></ul><h2 id="_12-项目上线" tabindex="-1"><a class="header-anchor" href="#_12-项目上线"><span>12. 项目上线</span></a></h2><ul><li><p>Nginx：是一款比较流行的web服务器软件，类似于Apache。</p></li><li><p>使用在服务器端下载的方式进行下载(直接发请求)：wget 地址</p></li><li><p>nginx默认也占用80端口，所以需要先把httpd停掉</p></li><li><p>启动命令：/usr/local/nginx/sbin/nginx</p></li><li><p>重载，重载配置文件后启动：/usr/local/nginx/sbin/nginx -s reload</p></li><li><p>关闭：只能kill进程</p></li><li><p>卸载编译安装的软件：rm -rf 软件的安装目录</p></li><li><p>注意：卸载一个编译安装的软件的时候必须先停止。</p></li><li><p>LAMP：Linux+Apache+MySQL+PHP</p></li><li><p>LNMP：Linux+Nginx+MySQL+PHP-fpm</p></li><li><p>LNMP：Linux+Nginx+MySQL+PHP+Apache</p></li><li><p>默认的Apache站点目录：/var/www/html，网页要展示的内容文件放在该目录下</p></li></ul>`,19))])}const A=a(v,[["render",k]]),w=JSON.parse('{"path":"/guide/knowledge/Linux%E5%9F%BA%E7%A1%80.html","title":"Linux基础","lang":"zh-CN","frontmatter":{},"git":{},"filePathRelative":"guide/knowledge/Linux基础.md"}');export{A as comp,w as data};
